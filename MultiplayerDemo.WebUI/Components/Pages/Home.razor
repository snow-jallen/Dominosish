@page "/"
@inject NavigationManager navManager
@inject ILogger<Home> logger

<h1>Games</h1>
@foreach(var item in openGames)
{
    <button @onclick=@(() => joinGame(item.Id)) class="btn btn-primary m-3">
        Join Game with @(item.Game.Player1?.Name ?? "[Unknown Player]")
    </button>
}
<button class="btn btn-primary m-3" @onclick=createNewGame>Create New Game</button>

@code {
    List<(int Id, Game Game)> openGames;

    void joinGame(int gameId)
    {
        logger.LogInformation("Joining game {id}", gameId);
        navManager.NavigateTo($"/join?gameid={gameId}");
    }

    void createNewGame()
    {
        var newGame = new Game();
        GameHost.Instance.Games.Add(newGame);
        GameHost.Instance.RaiseHostStateChanged();
        navManager.NavigateTo($"/join?gameid={GameHost.Instance.Games.Count-1}");
    }
    void refresh()
    {
        openGames = (from game in GameHost.Instance.Games
                                          let index = GameHost.Instance.Games.IndexOf(game)
                                          where game.Player2 is null
                                          select (index, game)).ToList();
        StateHasChanged();
    }
    protected override void OnInitialized()
    {
        refresh();
        GameHost.Instance.HostStateChanged += ()=> InvokeAsync(refresh);
    }
}